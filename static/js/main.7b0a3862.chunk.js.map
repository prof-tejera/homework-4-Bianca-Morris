{"version":3,"sources":["components/propTypes.js","components/Number.js","components/Operator/Operator.js","components/Screen.js","components/Calculator.js","App.js","index.js"],"names":["PropTypes","oneOfType","string","number","func","isRequired","bool","Container","styled","div","Number","this","props","onClick","value","Component","Operator","isClear","disabled","cls","className","undefined","InnerContainer","Screen","operator","second","opToRender","Calculator","state","first","handleNumberClick","setState","handleOperatorClick","parseInt","getScreenValue","noNumberInputtedYet","bothNumbersAndOpSelected","isNaN","disableOperators","disableEquals","CalculatorWrapper","NumPad","OpPane","style","display","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b0a3862.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n\nexport const propTypes = {\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    onClick: PropTypes.func.isRequired,\n    isClear: PropTypes.bool,\n    operator: PropTypes.string,\n    second: PropTypes.string,\n    disabled: PropTypes.bool\n}","import { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { propTypes } from './propTypes';\n\nconst Container = styled.div`\n  padding: 10px;\n  width: 40px;\n  height: 40px;\n  background-color: #a1b4d1;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  color: #0b2245;\n  font-size: 2em;\n  font-weight: 700px;\n  cursor: pointer;\n`;\n\nclass Number extends Component {\n  render() {\n    const { onClick, value } = this.props;\n    return (\n      <Container\n        onClick={() => onClick(value)}>\n        {value}\n      </Container>\n    );\n  }\n}\nNumber.propTypes = {\n  value: propTypes.value,\n  onClick: propTypes.onClick\n}\n\nexport default Number;\n","import { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { propTypes } from './../propTypes'\nimport \"./Operator.css\";\n\nconst Container = styled.div`\n  padding: 10px;\n  width: 35px;\n  text-align: center;\n  align-self: center;\n`;\n\nclass Operator extends Component {\n  render() {\n    const { onClick, value, isClear, disabled } = this.props;\n    const cls = `operator-btn ${disabled ? \"disabled\" : \"\"} ${isClear ?  \"is-clear\": \"\"}`;\n\n    return (\n      <Container\n        className={cls}\n        onClick={disabled ? undefined : () => onClick(value)}>\n        {value}\n      </Container>\n    );\n  }\n}\nOperator.propTypes = {\n  value: propTypes.value,\n  onClick: propTypes.onClick,\n  isClear: propTypes.isClear,\n  disabled: propTypes.disabled\n}\n\nexport default Operator;\n","import { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { propTypes } from './propTypes';\n\nconst Container = styled.div`\n  background-color: #ffffff;\n  width: 300px;\n  height: 70px;\n  text-align: right;\n  margin-bottom: 10px;\n  box-shadow: inset 0px 0px 21px -3px rgba(0,0,0,0.2);\n  display: flex;\n  font-size: 1.5em;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst InnerContainer = styled.div`\n  overflow-x: scroll;\n  height: 100%;\n`;\n\nclass Screen extends Component {\n  render() {\n    const { value, operator = null, second } = this.props;\n    \n    const opToRender = operator === \"=\" || second ? null: operator;\n    return (\n      <Container>\n        <InnerContainer>\n          <div>{value}</div> <div>{opToRender}</div>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\nScreen.propTypes = {\n  value: propTypes.value,\n  operator: propTypes.operator,\n  second: propTypes.second\n}\n\nexport default Screen;\n","import { Component } from \"react\";\nimport styled from 'styled-components';\n\nimport Number from \"./Number\";\nimport Operator from \"./Operator/Operator\";\nimport Screen from \"./Screen\";\n\nclass Calculator extends Component {\n  state = {\n    first: null,\n    operator: null,\n    second: null,\n  };\n\n  handleNumberClick = (number) => {\n    if (!this.state.operator) {\n      this.setState({ first: `${this.state.first || \"\"}${number}` });\n    } else {\n      this.setState({ second: `${this.state.second || \"\"}${number}` });\n    }\n  };\n\n  handleOperatorClick = (operator) => {\n    if (operator === \"=\") {\n      const first = parseInt(this.state.first);\n      const second = parseInt(this.state.second);\n\n      if (this.state.operator === \"+\") {\n        this.setState({ operator: null, first: first + second, second: null });\n      } else if (this.state.operator === \"/\") {\n        this.setState({ operator: null, first: first / second, second: null });\n      } else if (this.state.operator === \"-\") {\n        this.setState({ operator: null, first: first - second, second: null });\n      } else if (this.state.operator === \"x\") {\n        this.setState({ operator: null, first: first * second, second: null });\n      }\n    } else if (operator === \"clear\") {\n      this.setState({ first: null, second: null, operator: null });\n    } else {\n      this.setState({ operator });\n    }\n  };\n\n  getScreenValue = () => this.state.second || this.state.first;\n\n  render() {\n    const { operator, first, second } = this.state;\n\n    const noNumberInputtedYet = first === null;\n    const bothNumbersAndOpSelected = ((first || isNaN(first)) && (second))\n    const firstNumSelectedButNotSecond = first && (!second || isNaN(second));\n    \n    const disableOperators = !!(noNumberInputtedYet || bothNumbersAndOpSelected) ;\n    const disableEquals = firstNumSelectedButNotSecond || noNumberInputtedYet;\n\n    const CalculatorWrapper = styled.div`\n      background-color: #d1d8e3;\n      width: 350px;\n      height: 400px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      border-radius: 20px;\n      box-shadow: 2px 2px 10px rgba(0 , 0 , 0, 0.5);\n    `;\n\n    const NumPad = styled.div`\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-between;\n    `;\n\n    const OpPane = styled.div`\n      padding-left: 10;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-content: center;\n      margin-left: 15px;\n      border-left: 3px solid #dddddd;\n    `;\n\n    return (\n      <CalculatorWrapper>\n        <Screen value={this.getScreenValue()} {...{ operator, second }} />\n        <div style={{ display: \"flex\", width: \"300px\" }}>\n          <NumPad>\n            <Number value={1} onClick={this.handleNumberClick} />\n            <Number value={2} onClick={this.handleNumberClick} />\n            <Number value={3} onClick={this.handleNumberClick} />\n            <Number value={4} onClick={this.handleNumberClick} />\n            <Number value={5} onClick={this.handleNumberClick} />\n            <Number value={6} onClick={this.handleNumberClick} />\n            <Number value={7} onClick={this.handleNumberClick} />\n            <Number value={8} onClick={this.handleNumberClick} />\n            <Number value={9} onClick={this.handleNumberClick} />\n            <Number value={0} onClick={this.handleNumberClick} />\n          </NumPad>\n          <OpPane>\n            <Operator value=\"+\" onClick={this.handleOperatorClick} disabled={disableOperators}/>\n            <Operator value=\"/\" onClick={this.handleOperatorClick} disabled={disableOperators}/>\n            <Operator value=\"x\" onClick={this.handleOperatorClick} disabled={disableOperators}/>\n            <Operator value=\"-\" onClick={this.handleOperatorClick} disabled={disableOperators}/>\n            <Operator value=\"=\" onClick={this.handleOperatorClick} disabled={disableEquals} />\n            <Operator value=\"clear\" isClear onClick={this.handleOperatorClick} />\n          </OpPane>\n        </div>\n      </CalculatorWrapper>\n    );\n  }\n}\n\nexport default Calculator;\n","import './App.css';\nimport Calculator from 'components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>Calculator</header>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}